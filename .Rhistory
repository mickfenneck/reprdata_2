##call as
# data <- run_analysis(paste(getwd(),"/UCI HAR Dataset/",sep=""))
run_analysis <- function(path) {
#leggo label e titoli
activity_labels <-read.table(paste(path,"/activity_labels.txt",sep=""))
titles <- read.table(paste(path,"/features.txt",sep=""))
#leggo le x
trainx <- read.table(paste(path,"train/X_train.txt",sep=""))
testx <- read.table(paste(path,"test/X_test.txt",sep=""))
x <- rbind(trainx,testx)
names(x) <- titles$V2
#leggo le y e sostituisco con labels labels
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
y <- merge(x=x,y=activity_labels,by.x="V1",by.y="V1")
names(y)[2] <- "Labels"
#unisco y a x
data <- cbind(y[2],x)
#erase all the columns that does NOT contain "mean()" or "std()"
#eraseCol <- grep("mean()|std()",names(data),invert=TRUE)
#data[eraseCol] <- list(NULL)
data
}
data <- run_analysis(path)
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
View(y)
View(y)
y <- merge(x=x,y=activity_labels,by.x="V1",by.y="V1")
View(activity_labels)
View(activity_labels)
View(y)
View(y)
y  <- merge(x=y,y=activity_labels,by.x="V1",by.y="V1")
View(y)
View(y)
names(y)[2] <- "Labels"
View(y)
View(y)
data <- cbind(y[2],x)
View(data)
View(data)
##call as
# data <- run_analysis(paste(getwd(),"/UCI HAR Dataset/",sep=""))
run_analysis <- function(path) {
#leggo label e titoli
activity_labels <-read.table(paste(path,"/activity_labels.txt",sep=""))
titles <- read.table(paste(path,"/features.txt",sep=""))
#leggo le x
trainx <- read.table(paste(path,"train/X_train.txt",sep=""))
testx <- read.table(paste(path,"test/X_test.txt",sep=""))
x <- rbind(trainx,testx)
names(x) <- titles$V2
#leggo le y e sostituisco con labels labels
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
y <- merge(x=y,y=activity_labels,by.x="V1",by.y="V1")
names(y)[2] <- "Labels"
#unisco y a x
data <- cbind(y[2],x)
#erase all the columns that does NOT contain "mean()" or "std()"
#eraseCol <- grep("mean()|std()",names(data),invert=TRUE)
#data[eraseCol] <- list(NULL)
data
}
data <- run_analysis(path)
View(tmp)
View(tmp)
View(data)
View(data)
View(y)
View(y)
View(trainy)
View(trainy)
View(testy)
View(testy)
View(trainy)
View(trainy)
testy
trainy
merda <- rbind(testy,trainy)
merda
View(y)
View(y)
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
View(y)
View(y)
y <- merge(x=y,y=activity_labels,by.x="V1",by.y="V1")
View(y)
View(y)
y <- merge(y,activity_labels,by.x="V1",by.y="V1")
View(y)
View(y)
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
y <- merge(y,activity_labels,by.x="V1",by.y="V1") #non fa bene il merge
View(y)
View(y)
k <- rbind(trainy,testy)
k <- merge(k,activity_labels,by.x="V1",by.y="V1")
k
path <- "/Users/mickfenneck/getcleandata/UCI HAR Dataset/"
##call as
# data <- run_analysis(paste(getwd(),"/UCI HAR Dataset/",sep=""))
run_analysis <- function(path) {
#leggo label e titoli
activity_labels <-read.table(paste(path,"/activity_labels.txt",sep=""))
titles <- read.table(paste(path,"/features.txt",sep=""))
#leggo le x
trainx <- read.table(paste(path,"train/X_train.txt",sep=""))
testx <- read.table(paste(path,"test/X_test.txt",sep=""))
x <- rbind(trainx,testx)
names(x) <- titles$V2
#leggo le y e sostituisco con labels labels
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
y <- merge(x=y,y=activity_labels,by.x="V1",by.y="V1") #non fa bene il merge <- porcoo#######
names(y)[2] <- "Labels"
#unisco y a x
data <- cbind(y[2],x)
#erase all the columns that does NOT contain "mean()" or "std()"
#eraseCol <- grep("mean()|std()",names(data),invert=TRUE)
#data[eraseCol] <- list(NULL)
data
}
data <- run_analysis(path)
View(data)
View(data)
eraseCol <- grep("mean()|std()",names(data),invert=TRUE)
eraseCol
data[eraseCol] <- list(NULL)
View(data)
View(data)
##call as
# data <- run_analysis(paste(getwd(),"/UCI HAR Dataset/",sep=""))
run_analysis <- function(path) {
#leggo label e titoli
activity_labels <-read.table(paste(path,"/activity_labels.txt",sep=""))
titles <- read.table(paste(path,"/features.txt",sep=""))
#leggo le x
trainx <- read.table(paste(path,"train/X_train.txt",sep=""))
testx <- read.table(paste(path,"test/X_test.txt",sep=""))
x <- rbind(trainx,testx)
names(x) <- titles$V2
eraseCol <- grep("mean()|std()",names(x),invert=TRUE)
x[eraseCol] <- list(NULL)
#leggo le y e sostituisco con labels labels
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
y <- merge(x=y,y=activity_labels,by.x="V1",by.y="V1") #non fa bene il merge <- porcoo#######
names(y)[2] <- "Labels"
#unisco y a x
data <- cbind(y[2],x)
#erase all the columns that does NOT contain "mean()" or "std()"
data
}
data <- run_analysis(path)
View(data)
View(data)
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
View(trainy)
View(trainy)
View(testy)
View(testy)
View(y)
View(y)
k <- merge(x=y,y=activity_labels,by.x="V1",by.y="V1")
activity_labels <-read.table(paste(path,"/activity_labels.txt",sep=""))
k <- merge(x=y,y=activity_labels,by.x="V1",by.y="V1")
View(k)
View(k)
View(activity_labels)
View(activity_labels)
changeLabel<- function(data,label) {
for(i in label) {
data[grep(i,data)] <- list(i)
}
}
View(y)
View(y)
changeLabel(y,activity_labels)
changeLabel<- function(data,label) {
for(i in label) {
data[grep(i,data)] <- i
}
}
changeLabel(y,activity_labels)
changeLabel<- function(data,label) {
for(i in label) {
pos <- grep(i,data)
for(k in pos) {
data[k] <- i
}
}
}
changeLabel(y,activity_labels)
for(i in label) {
pos <- grep(i,data)
}}
changeLabel(y,activity_labels$V2)
View(y)
View(y)
changeLabel<- function(data,label) {
for(i in label) {
pos <- grep(i,data)
for(k in pos) {
data[k] <- i
}
}
data
}
ok <- changeLabel(y,activity_labels$V2)
View(ok)
View(ok)
merda <- c("cane"l)
merda <- c("cane","cavallo","pecora")
?sub
merda <- ("cavallo","vaffanculo",merda)
?merge
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
sorted <- merge(x=y,y=activity_labels,by.x="V1",by.y="V1")
View(sorted)
View(sorted)
notsorted <- merge(x=y,y=activity_labels,by.x="V1",by.y="V1",sort=FALSE)
View(notsorted)
View(notsorted)
##call as
# data <- run_analysis(paste(getwd(),"/UCI HAR Dataset/",sep=""))
run_analysis <- function(path) {
#leggo label e titoli
activity_labels <-read.table(paste(path,"/activity_labels.txt",sep=""))
titles <- read.table(paste(path,"/features.txt",sep=""))
#leggo le x
trainx <- read.table(paste(path,"train/X_train.txt",sep=""))
testx <- read.table(paste(path,"test/X_test.txt",sep=""))
x <- rbind(trainx,testx)
names(x) <- titles$V2
eraseCol <- grep("mean()|std()",names(x),invert=TRUE)
x[eraseCol] <- list(NULL)
#leggo le y e sostituisco con labels labels
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
y <- merge(x=y,y=activity_labels,by.x="V1",by.y="V1") #non fa bene il merge <- porcoo#######
names(y)[2] <- "Labels"
#unisco y a x
data <- cbind(y[2],x)
data
}
data <- run_analysis("/Users/mickfenneck/getcleandata/UCI HAR Dataset/")
View(data)
View(data)
?read.table
path <- "/Users/mickfenneck/getcleandata/UCI HAR Dataset/"
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
View(y)
View(y)
?apply()
y$V1
y$V1 <- as.character(y$V1)
str(y)
y$V1 <- as.factor(y$V1)
str(y)
levels(y$V1)
activity_labels <-read.table(paste(path,"/activity_labels.txt",sep=""))
View(activity_labels)
View(activity_labels)
levels(y$V1) <- activity_labels$V2
levels(y$V1)
View(y)
View(y)
str(y)
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)[1]
str(y)
y
##call as
# data <- run_analysis(paste(getwd(),"/UCI HAR Dataset/",sep=""))
run_analysis <- function(path) {
#leggo label e titoli
activity_labels <-read.table(paste(path,"/activity_labels.txt",sep=""))
titles <- read.table(paste(path,"/features.txt",sep=""))
#leggo le x
trainx <- read.table(paste(path,"train/X_train.txt",sep=""))
testx <- read.table(paste(path,"test/X_test.txt",sep=""))
x <- rbind(trainx,testx)
names(x) <- titles$V2
eraseCol <- grep("mean()|std()",names(x),invert=TRUE)
x[eraseCol] <- list(NULL)
#leggo le y e sostituisco con labels labels
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
#converto la colonna a factor per modificare i levels
y$V1 <- as.factor(y$V1)
levels(y$V1) <- activity_labels$V2
names(y)[2] <- "Labels"
#unisco y a x
data <- cbind(y[2],x)
data
}
path <- "/Users/mickfenneck/getcleandata/UCI HAR Dataset/"
data <- run_analysis(path)
activity_labels <-read.table(paste(path,"/activity_labels.txt",sep=""))
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
#converto la colonna a factor per modificare i levels
y$V1 <- as.factor(y$V1)
levels(y$V1) <- activity_labels$V2
View(y)
View(y)
path <- "/Users/mickfenneck/getcleandata/UCI HAR Dataset/"
data <- run_analysis(path)
##call as
# data <- run_analysis(paste(getwd(),"/UCI HAR Dataset/",sep=""))
run_analysis <- function(path) {
#leggo label e titoli
activity_labels <-read.table(paste(path,"/activity_labels.txt",sep=""))
titles <- read.table(paste(path,"/features.txt",sep=""))
#leggo le x
trainx <- read.table(paste(path,"train/X_train.txt",sep=""))
testx <- read.table(paste(path,"test/X_test.txt",sep=""))
x <- rbind(trainx,testx)
names(x) <- titles$V2
eraseCol <- grep("mean()|std()",names(x),invert=TRUE)
x[eraseCol] <- list(NULL)
#leggo le y e sostituisco con labels labels
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
#converto la colonna a factor per modificare i levels
y$V1 <- as.factor(y$V1)
levels(y$V1) <- activity_labels$V2
names(y)[1] <- "Labels"
#unisco y a x
data <- cbind(y[2],x)
data
}
data <- run_analysis(path)
path <- "/Users/mickfenneck/getcleandata/UCI HAR Dataset/"
##call as
# data <- run_analysis(paste(getwd(),"/UCI HAR Dataset/",sep=""))
run_analysis <- function(path) {
#leggo label e titoli
activity_labels <-read.table(paste(path,"/activity_labels.txt",sep=""))
titles <- read.table(paste(path,"/features.txt",sep=""))
#leggo le x
trainx <- read.table(paste(path,"train/X_train.txt",sep=""))
testx <- read.table(paste(path,"test/X_test.txt",sep=""))
x <- rbind(trainx,testx)
names(x) <- titles$V2
eraseCol <- grep("mean()|std()",names(x),invert=TRUE)
x[eraseCol] <- list(NULL)
#leggo le y e sostituisco con labels labels
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
#converto la colonna a factor per modificare i levels
y$V1 <- as.factor(y$V1)
levels(y$V1) <- activity_labels$V2
names(y)[1] <- "Labels"
#unisco y a x
data <- cbind(y[1],x)
data
}
data <- run_analysis(path)
View(data)
View(data)
##call as
# data <- run_analysis(paste(getwd(),"/UCI HAR Dataset/",sep=""))
run_analysis <- function(path) {
#leggo label e titoli
activity_labels <-read.table(paste(path,"/activity_labels.txt",sep=""))
titles <- read.table(paste(path,"/features.txt",sep=""))
#leggo le x
trainx <- read.table(paste(path,"train/X_train.txt",sep=""))
testx <- read.table(paste(path,"test/X_test.txt",sep=""))
x <- rbind(trainx,testx)
names(x) <- titles$V2
eraseCol <- grep("mean()|std()",names(x),invert=TRUE)
x[eraseCol] <- list(NULL)
#leggo le y e sostituisco con labels labels
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
#converto la colonna a factor per modificare i levels
y$V1 <- as.factor(y$V1)
levels(y$V1) <- activity_labels$V2
names(y)[1] <- "Labels"
#unisco y a x
data <- cbind(y[1],x)
data
}
path <- "/Users/mickfenneck/getcleandata/UCI HAR Dataset/"
data <- run_analysis(path)
View(data)
View(data)
##call as
# data <- run_analysis(paste(getwd(),"/UCI HAR Dataset/",sep=""))
run_analysis <- function(path) {
#leggo label e titoli
activity_labels <-read.table(paste(path,"/activity_labels.txt",sep=""))
titles <- read.table(paste(path,"/features.txt",sep=""))
#leggo le x
trainx <- read.table(paste(path,"train/X_train.txt",sep=""))
testx <- read.table(paste(path,"test/X_test.txt",sep=""))
x <- rbind(trainx,testx)
names(x) <- titles$V2
eraseCol <- grep("mean()|std()",names(x),invert=TRUE)
x[eraseCol] <- list(NULL)
#leggo le y e sostituisco con labels labels
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
#converto la colonna a factor per modificare i levels
y$V1 <- as.factor(y$V1)
levels(y$V1) <- activity_labels$V2
names(y)[1] <- "Labels"
#unisco y a x
data <- cbind(y[1],x)
data
}
path <- "/Users/mickfenneck/getcleandata/UCI HAR Dataset/"
data <- run_analysis(path)
path <- "/Users/mi"
path <- "/Users/mickfenneck/getcleandata/UCI HAR Dataset/"
##call as
# data <- run_analysis(paste(getwd(),"/UCI HAR Dataset/",sep=""))
run_analysis <- function(path) {
#leggo label e titoli
activity_labels <-read.table(paste(path,"/activity_labels.txt",sep=""))
titles <- read.table(paste(path,"/features.txt",sep=""))
#leggo le x
trainx <- read.table(paste(path,"train/X_train.txt",sep=""))
testx <- read.table(paste(path,"test/X_test.txt",sep=""))
x <- rbind(trainx,testx)
names(x) <- titles$V2
eraseCol <- grep("mean()|std()",names(x),invert=TRUE)
x[eraseCol] <- list(NULL)
#leggo le y e sostituisco con labels labels
trainy <- read.table(paste(path,"train/y_train.txt",sep=""))
testy <- read.table(paste(path,"test/y_test.txt",sep=""))
y <- rbind(trainy,testy)
#converto la colonna a factor per modificare i levels
y$V1 <- as.factor(y$V1)
levels(y$V1) <- activity_labels$V2
names(y)[1] <- "Activity"
#leggo subject
trainSub <- read.table(paste(path,"train/subject_train.txt",sep=""))
testSub <- read.table(paste(path,"test/subject_test.txt",sep=""))
k <- rbind(trainSub,testSub)
names(k)[1] <- "Subject"
#unisco y a x
data <- data.table(cbind(y[1],k,x))
tidyData <- data[,lapply(.SD, mean), by="Activity,Subject"]
write.table(tidyData, "tidyData.txt")
tidyData
}
data <- run_analysis(path)
library(data.table)
data <- run_analysis(path)
View(data)
str(data)
source('~/Desktop/Programming Assignments/Week 4/rankhospital.R')
library(ggplot2)
?qplot
b jhbhbjbj
data <- read.csv("repdata-data-StormData.csv")
setwd("./Desktop/reprdata_2/")
data <- read.csv("repdata-data-StormData.csv")
str(data)
aaa <- aggregate(INJURIES ~ EVTYPE, data=data, FUN=sum)
View(aaa)
?sort
aaa <- sort(aaa)
aaa <- sort(aaa,aaa$INJURIES)
aaa <- sort(aaa,aaa$INJURIES,decreasing=FALSE)
?order
?arrange
??arrange
aaa[with(aaa, order(INJURIES))]
?aggregate
max(aaa$INJURIES)
aaa$EVTYPE[max(aaa$INJURIES)]
aaa$EVTYPE = [max(aaa$INJURIES)]
aaa$EVTYPE[[max(aaa$INJURIES)]]
aaa[EVTYPE = max(aaa$INJURIES)]
View(aaa)
View(aaa)
boh <- aggregate(data$INJURIES, data$FATALITIES, by=data$EVTYPE, FUN=sum)
boh <- aggregate(data$INJURIES, data$FATALITIES ~ by=data$EVTYPE, FUN=sum)
?tapply
View(aaa)
View(aaa)
View(data)
View(data)
